<?xml version="1.0" encoding="utf-16"?>
<CLAS CLSNAME="ZCL_FM_LOCAL" VERSION="1" LANGU="E" DESCRIPT="Global class to handle local files" UUID="4BBF59AD42F40069E10080008D7AFA6A" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="BRCOUTOHU" CREATEDON="20100409" CHANGEDBY="BCUSER" CHANGEDON="20101012" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="701" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 ">
 <implementing CLSNAME="ZCL_FM_LOCAL" REFCLSNAME="ZIF_FM_FILE" VERSION="1" EXPOSURE="2" STATE="1" AUTHOR="BCUSER" CREATEDON="20101012" CHANGEDBY="BCUSER" CHANGEDON="20101012" RELTYPE="1"/>
 <implementing CLSNAME="ZCL_FM_LOCAL" REFCLSNAME="ZIF_FM_FILE_CONSTANTS" VERSION="1" EXPOSURE="2" STATE="1" AUTHOR="BCUSER" CREATEDON="20101012" CHANGEDBY="BCUSER" CHANGEDON="20101012" RELTYPE="1"/>
 <implementing CLSNAME="ZCL_FM_LOCAL" REFCLSNAME="ZIF_FM_FILE_TYPES" VERSION="1" EXPOSURE="2" STATE="1" AUTHOR="BCUSER" CREATEDON="20101012" CHANGEDBY="BCUSER" CHANGEDON="20101012" RELTYPE="1"/>
 <publicSection>class ZCL_FM_LOCAL definition
  public
  final
  create public .

*&quot;* public components of class ZCL_FM_LOCAL
*&quot;* do not include other source files here!!!
public section.

  interfaces ZIF_FM_FILE .
  interfaces ZIF_FM_FILE_CONSTANTS .
  interfaces ZIF_FM_FILE_TYPES .

  methods CONSTRUCTOR
    importing
      value(IM_FILE_NAME) type FILE_TABLE-FILENAME .</publicSection>
 <protectedSection>*&quot;* protected components of class ZCL_FM_LOCAL
*&quot;* do not include other source files here!!!
protected section.</protectedSection>
 <privateSection>*&quot;* private components of class ZCL_FM_LOCAL
*&quot;* do not include other source files here!!!
private section.</privateSection>
 <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
 <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
 <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
 <interfaceMethod CLSNAME="ZCL_FM_LOCAL" CPDNAME="ZIF_FM_FILE~APPEND_ROW">
  <source>method ZIF_FM_FILE~APPEND_ROW.
  APPEND im_file_row TO zif_fm_file~ci_i_data.
endmethod.</source>
 </interfaceMethod>
 <interfaceMethod CLSNAME="ZCL_FM_LOCAL" CPDNAME="ZIF_FM_FILE~FILE_EXIST">
  <source>method ZIF_FM_FILE~FILE_EXIST.

  CALL METHOD cl_gui_frontend_services=&gt;file_exist
    EXPORTING
      file                 = zif_fm_file~ci_v_file_name
    RECEIVING
      result               = re_exist
    EXCEPTIONS
      cntl_error           = 1
      error_no_gui         = 2
      wrong_parameter      = 3
      not_supported_by_gui = 4
      OTHERS               = 5.


endmethod.</source>
 </interfaceMethod>
 <interfaceMethod CLSNAME="ZCL_FM_LOCAL" CPDNAME="ZIF_FM_FILE~OPEN">
  <source>method ZIF_FM_FILE~OPEN.
   DATA l_r_error TYPE REF TO cx_root.
   DATA v_txt     TYPE string.

  TRY .

    CALL FUNCTION &apos;GUI_UPLOAD&apos;
      EXPORTING
        filename                      = Zif_fm_file~ci_v_file_name
*     FILETYPE                      = &amp;apos;ASC&amp;apos;
*     HAS_FIELD_SEPARATOR           = &amp;apos; &amp;apos;
*     HEADER_LENGTH                 = 0
*     READ_BY_LINE                  = &amp;apos;X&amp;apos;
*     DAT_MODE                      = &amp;apos; &amp;apos;
*     CODEPAGE                      = &amp;apos; &amp;apos;
*     IGNORE_CERR                   = ABAP_TRUE
*     REPLACEMENT                   = &amp;apos;#&amp;apos;
*     CHECK_BOM                     = &amp;apos; &amp;apos;
*     VIRUS_SCAN_PROFILE            =
*     NO_AUTH_CHECK                 = &amp;apos; &amp;apos;
*   IMPORTING
*     FILELENGTH                    =
*     HEADER                        =
      TABLES
        data_tab                      = Zif_fm_file~ci_i_data
     EXCEPTIONS
       file_open_error               = 1
       file_read_error               = 2
       no_batch                      = 3
       gui_refuse_filetransfer       = 4
       invalid_type                  = 5
       no_authority                  = 6
       unknown_error                 = 7
       bad_data_format               = 8
       header_not_allowed            = 9
       separator_not_allowed         = 10
       header_too_long               = 11
       unknown_dp_error              = 12
       access_denied                 = 13
       dp_out_of_memory              = 14
       disk_full                     = 15
       dp_timeout                    = 16
       OTHERS                        = 17
              .
    CASE sy-subrc.
      WHEN 1.
        CREATE OBJECT l_r_error TYPE cx_sy_file_open.
        RAISE EXCEPTION TYPE cx_sy_file_open
          EXPORTING
*            textid =
            previous = l_r_error
*            filename =
*            errorcode =
*            errortext =
            .

*    WHEN 2.
*      RAISE FILE_READ_ERROR.
*    WHEN 3.
*      RAISE NO_BATCH.
*    WHEN 4.
*      RAISE GUI_REFUSE_FILETRANSFER.
      WHEN 6.
        CREATE OBJECT l_r_error TYPE cx_sy_file_authority.
        RAISE EXCEPTION TYPE cx_sy_file_authority
          EXPORTING
*          textid =
            previous = l_r_error
*          filename =
            .
*    WHEN 7.
*      RAISE UNKNOWN_ERROR.
*    WHEN 8.
*      RAISE BAD_DATA_FORMAT.
*    WHEN 12.
*      RAISE UNKNOWN_DP_ERROR.
*    WHEN 13.
*      RAISE ACCESS_DENIED.
*    WHEN 14.
*      RAISE DP_OUT_OF_MEMORY.
*    WHEN 16.
*      RAISE DP_TIMEOUT.

    ENDCASE.

  ENDTRY.
endmethod.</source>
 </interfaceMethod>
 <interfaceMethod CLSNAME="ZCL_FM_LOCAL" CPDNAME="ZIF_FM_FILE~SAVE">
  <source>method ZIF_FM_FILE~SAVE.
   DATA: l_r_error TYPE REF TO cx_root.

  CALL FUNCTION &apos;GUI_DOWNLOAD&apos;
    EXPORTING
*     BIN_FILESIZE                    =
      filename                        = Zif_fm_file~ci_v_file_name
*     FILETYPE                        = &amp;apos;ASC&amp;apos;
*     APPEND                          = &amp;apos; &amp;apos;
*     WRITE_FIELD_SEPARATOR           = &amp;apos; &amp;apos;
*     HEADER                          = &amp;apos;00&amp;apos;
*     TRUNC_TRAILING_BLANKS           = &amp;apos; &amp;apos;
*     WRITE_LF                        = &amp;apos;X&amp;apos;
*     COL_SELECT                      = &amp;apos; &amp;apos;
*     COL_SELECT_MASK                 = &amp;apos; &amp;apos;
*     DAT_MODE                        = &amp;apos; &amp;apos;
*     CONFIRM_OVERWRITE               = &amp;apos; &amp;apos;
*     NO_AUTH_CHECK                   = &amp;apos; &amp;apos;
*     CODEPAGE                        = &amp;apos; &amp;apos;
*     IGNORE_CERR                     = ABAP_TRUE
*     REPLACEMENT                     = &amp;apos;#&amp;apos;
*     WRITE_BOM                       = &amp;apos; &amp;apos;
*     TRUNC_TRAILING_BLANKS_EOL       = &amp;apos;X&amp;apos;
*     WK1_N_FORMAT                    = &amp;apos; &amp;apos;
*     WK1_N_SIZE                      = &amp;apos; &amp;apos;
*     WK1_T_FORMAT                    = &amp;apos; &amp;apos;
*     WK1_T_SIZE                      = &amp;apos; &amp;apos;
*     WRITE_LF_AFTER_LAST_LINE        = ABAP_TRUE
*     SHOW_TRANSFER_STATUS            = ABAP_TRUE
*   IMPORTING
*     FILELENGTH                      =
    TABLES
      data_tab                        = Zif_fm_file~ci_i_data
*     FIELDNAMES                      =
   EXCEPTIONS
     file_write_error                = 1
     no_batch                        = 2
     gui_refuse_filetransfer         = 3
     invalid_type                    = 4
     no_authority                    = 5
     unknown_error                   = 6
     header_not_allowed              = 7
     separator_not_allowed           = 8
     filesize_not_allowed            = 9
     header_too_long                 = 10
     dp_error_create                 = 11
     dp_error_send                   = 12
     dp_error_write                  = 13
     unknown_dp_error                = 14
     access_denied                   = 15
     dp_out_of_memory                = 16
     disk_full                       = 17
     dp_timeout                      = 18
     file_not_found                  = 19
     dataprovider_exception          = 20
     control_flush_error             = 21
     OTHERS                          = 22
            .
  CASE sy-subrc.
    WHEN 1.
*      RAISE EXCEPTION TYPE
    WHEN 5.
      CREATE OBJECT l_r_error TYPE cx_sy_file_authority.
      RAISE EXCEPTION TYPE cx_sy_file_authority
        EXPORTING
*          textid =
          previous = l_r_error
*          filename =
          .
*      raise exception
*    when  6.
*      raise exception
*    when  7.
*      raise exception
*    when  17.
*      raise exception
*    when others.
*      RAISE EXCEPTION
  ENDCASE.
endmethod.</source>
 </interfaceMethod>
 <method CLSNAME="ZCL_FM_LOCAL" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="constructor" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20101012" CHANGEDBY="BCUSER" CHANGEDON="20101012" MTDTYPE="2" MTDDECLTYP="0" R3RELEASE="701" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_FM_LOCAL" CMPNAME="CONSTRUCTOR" SCONAME="IM_FILE_NAME" VERSION="1" LANGU="E" DESCRIPT="importing file name from class where it is instantiated" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20101012" CHANGEDBY="BCUSER" CHANGEDON="20101012" PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="FILE_TABLE-FILENAME"/>
  <source>method CONSTRUCTOR.
me-&gt;ZIF_FM_file~ci_v_file_name = im_file_name.
endmethod.</source>
 </method>
</CLAS>
